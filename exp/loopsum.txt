/Users/yufeng/research/benchmarks/verified_contracts/$$$$$$$$$$$$.sol
INFO:Slither:/Users/yufeng/research/benchmarks/verified_contracts/$$$$$$$$$$$$.sol analyzed (1 contracts), 0 result(s) found
/Users/yufeng/research/benchmarks/verified_contracts/$F2U.sol
Compilation warnings/errors on /Users/yufeng/research/benchmarks/verified_contracts/$F2U.sol:
/Users/yufeng/research/benchmarks/verified_contracts/$F2U.sol:15:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function $F2U() {
    ^ (Relevant source part starts here and spans across multiple lines).
/Users/yufeng/research/benchmarks/verified_contracts/$F2U.sol:29:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/Users/yufeng/research/benchmarks/verified_contracts/$F2U.sol:30:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/Users/yufeng/research/benchmarks/verified_contracts/$F2U.sol:44:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/Users/yufeng/research/benchmarks/verified_contracts/$F2U.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.24;"
contract $F2U {
^ (Relevant source part starts here and spans across multiple lines).
/Users/yufeng/research/benchmarks/verified_contracts/$F2U.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function $F2U() {
    ^ (Relevant source part starts here and spans across multiple lines).
/Users/yufeng/research/benchmarks/verified_contracts/$F2U.sol:23:9: Warning: Unused local variable.
        uint256 totalSupply = initialSupply;                        // Update total supply
